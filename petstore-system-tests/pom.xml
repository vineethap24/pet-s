<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.pyxis.petstore</groupId>
        <artifactId>petstore</artifactId>
        <version>0.9-SNAPSHOT</version>
    </parent>
    <artifactId>petstore-system-tests</artifactId>
    <name>petstore-system-tests</name>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>petstore-app</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>petstore-domain</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>petstore-domain</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>petstore-infrastructure</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>petstore-infrastructure</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.carbonfive.db-support</groupId>
            <artifactId>db-migration</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-core-uberjar</artifactId>
            <version>0.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-ant</artifactId>
            <version>0.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
        	<groupId>org.apache.httpcomponents</groupId>
        	<artifactId>httpcore</artifactId>
        	<version>4.2.3</version>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-support</artifactId>
            <version>2.28.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-firefox-driver</artifactId>
            <version>2.28.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.googlecode.windowlicker</groupId>
            <artifactId>windowlicker-web</artifactId>
            <version>r268</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.9</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Run the petstore application in embedded jetty server -->
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>6.1.26</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>petstore-app</artifactId>
            <version>${project.version}</version>
            <classifier>jar</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>sitemesh</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-tools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.testinfected.time</groupId>
            <artifactId>time</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <includes>
                        <include>**/*Feature.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <server.lifecycle>external</server.lifecycle>
                        <!-- Until we have a proper way to start and stop selenium server from within the build, use firefox driver -->
                        <browser.lifecycle>${browser.lifecycle}</browser.lifecycle>
                        <browser.remote.url>${selenium.server.url}</browser.remote.url>
                        <browser.remote.capability.browserName>${selenium.server.browser}</browser.remote.capability.browserName>
                        <browser.remote.capability.version>${selenium.server.browser.version}</browser.remote.capability.version>
                        <browser.remote.capability.name>PetStore System Tests</browser.remote.capability.name>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.carbonfive.db-support</groupId>
                <artifactId>db-migration-maven-plugin</artifactId>
                <version>0.9.9-m2</version>
                <configuration>
                    <url>${test.jdbc.url}</url>
                    <username>${test.jdbc.username}</username>
                    <password>${test.jdbc.password}</password>
                    <migrationsPath>../petstore-infrastructure/src/main/resources/db/migrations</migrationsPath>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.11</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>reset</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <wait>false</wait>
                    <container>
                        <log>${test.log.dir}/cargo.log</log>
                        <containerId>tomcat5x</containerId>
                        <timeout>60000</timeout>
                        <artifactInstaller>
                            <groupId>tomcat</groupId>
                            <artifactId>apache-tomcat</artifactId>
                            <version>5.5.23</version>
                        </artifactInstaller>
                        <systemProperties>
                            <jdbc.driverClassName>${test.jdbc.driverClassName}</jdbc.driverClassName>
                            <jdbc.url>${test.jdbc.url}</jdbc.url>
                            <jdbc.username>${test.jdbc.username}</jdbc.username>
                            <jdbc.password>${test.jdbc.password}</jdbc.password>
                            <hibernate.dialect>${test.hibernate.dialect}</hibernate.dialect>
                            <timeServer.host>${test.timeServer.host}</timeServer.host>
                            <timeServer.port>${test.timeServer.port}</timeServer.port>
                            <log.to>file</log.to>
                            <test.log.dir>${test.log.dir}</test.log.dir>
                            <test.log.file>webapp.log</test.log.file>
                            <log4j.configuration>file:${project.basedir}/src/test/resources/log4j.xml</log4j.configuration>
                        </systemProperties>
                    </container>
                    <configuration>
                        <properties>
                            <cargo.servlet.port>${server.port}</cargo.servlet.port>
                            <cargo.tomcat.ajp.port>8012</cargo.tomcat.ajp.port>
                        </properties>
                    </configuration>
                </configuration>
                <executions>
                    <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                            <goal>deploy</goal>
                        </goals>
                        <configuration>
                            <deployer>
                                <deployables>
                                    <deployable>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>petstore-app</artifactId>
                                        <type>war</type>
                                        <pingURL>http://localhost:${server.port}${context.path}</pingURL>
                                        <properties>
                                            <context>${context.path}</context>
                                        </properties>
                                    </deployable>
                                </deployables>
                            </deployer>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-container</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
